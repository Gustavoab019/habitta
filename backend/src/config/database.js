import mongoose from 'mongoose';

const connectDB = async () => {
  try {
    const mongoURI = process.env.MONGODB_URI;
    
    if (!mongoURI) {
      throw new Error('MONGODB_URI n√£o encontrada nas vari√°veis de ambiente');
    }

    console.log('üîÑ Conectando ao MongoDB Atlas...');
    
    // Conectar sem as op√ß√µes deprecadas
    const conn = await mongoose.connect(mongoURI);

    console.log(`‚úÖ MongoDB Atlas conectado: ${conn.connection.host}`);
    console.log(`üìä Base de dados: ${conn.connection.name}`);
    
    // Event listeners para conex√£o
    mongoose.connection.on('connected', () => {
      console.log('üîó Mongoose conectado ao MongoDB Atlas');
    });

    mongoose.connection.on('error', (err) => {
      console.error('‚ùå Erro na conex√£o MongoDB:', err);
    });

    mongoose.connection.on('disconnected', () => {
      console.log('üîå Mongoose desconectado do MongoDB');
    });

    // Graceful shutdown
    process.on('SIGINT', async () => {
      await mongoose.connection.close();
      console.log('üõë Conex√£o MongoDB encerrada devido ao encerramento da aplica√ß√£o');
      process.exit(0);
    });

  } catch (error) {
    console.error('‚ùå Erro ao conectar ao MongoDB:', error.message);
    
    // Em desenvolvimento, continue mesmo sem DB para permitir desenvolvimento local
    if (process.env.NODE_ENV === 'development') {
      console.log('‚ö†Ô∏è  Continuando em modo desenvolvimento...');
      console.log('üí° Verifique suas credenciais MongoDB no arquivo .env');
    } else {
      process.exit(1);
    }
  }
};

export default connectDB;